<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE1NTQBNTU1JU1NTk1paWpFaWlqRWlpakVpa
        WpFJSUmRSUlJkVpaWpFZWViRWFhXkVlZWZFVVVWRQEBAkVVVVZFZWVmRWVlZk1lZWUZZWVkAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9PT0AR0dHAEdHR4BLS0v/T09P/05O
        Tv9MTEz/S0tL/0BAQP9AQED/UlJS/1xcXv9gY2j/W1xd/1VVVP9AQED/VVVV/1lZWf9ZWVn/WVlZa1lZ
        WQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExMTABMTEwATExMLFBQUIFXV1ecSkpK0UFB
        Qf9CQkL/Q0ND/0RERP9FRUX/R0dH/z8/Pv9cYnH/jZ7H/5es3f+Ajav/VldY/0BAQP9VVVX/WVlZ/1lZ
        WfxZWVlUWVlZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATExMAEtLSyZOTk7QVlZW/1lZ
        Wf9ZWVn/WFhY/1lZWf9ZWVn/WVlZ/1lZWf9aWlr/SEdG/2x5lv+jvPf/o7v1/5mu4P9dX2b/Pz8//1VV
        Vf9ZWVn/WVlZ9VlZWT9ZWVkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMTEwATExMblJS
        Uv9ZWVn/WVlZ/1VVVf9VVVX/VFRU/1RUVP9UVFT/VFRU/1RUVP9EREP/b3mS/6W89P+iuvX/kqXS/1pc
        YP9APz//VVVV/1lZWf9ZWVnrWVlZLFlZWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExM
        TABMTEx/UlJS/1lZWf9WVlb/Q0ND/0BAQP9KSEf/UU9N/1JQT/9SUE//UlBP/09NTP+emJj/29ji/6Ws
        xP9obXn/VVVV/0BAQP9VVVX/WVlZ/1lZWd5YWFgdWFhYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATExMAExMTIBSUlL/WVlZ/1lZWf9VVVX/WllZ/7OimP/Ww7f/2cvD/9nMxP/ZzMT/2czE/+jZ
        0f/t3tT/iYSA/1ZWVv9VVVX/QEBA/1VVVf9ZWVn/WVlZzlhYWBFYWFgAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABMTEwATExMgFJSUv9ZWVn/WVlZ/1dXWP95dHD/4Mi7/+7az//w4dj/8OHY//Dh
        2P/w4dj/8uLZ/8u/uP9YV1b/WVlZ/1dXV/9MTEz/V1dX/1lZWf9ZWVm6WFhYCFhYWAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAExMTABMTEyAUlJS/1lZWf9ZWVn/WFhY/6WYkP/q0cP/7dvQ/+/g
        1//v4Nf/7+DX/+/g1//y4tn/joaB/ycnJ/9MTEz/WVlZ/1lZWf9ZWVn/WVlZ/1lZWaVUVFQBV1dXAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATExMAExMTHxSUlL/WVlZ/1hYWP9nZGP/z7qv/+rQ
        wv/s2c7/7+DX/+/g1//v4Nf/8OHY/+PVzP9RTUv/HR0e/zIyMv9XV1f/WVlZ/1lZWf9ZWVn/WVlZjFpa
        WgBWVlYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMTEwAS0tLXVFRUf1ZWVn/V1dX/4V9
        ef/lzb//6tHD/+vVyP/v39b/7+DX/+/g1//x4tj/y8PE/zQ1Of8hISD/QUFB/1lZWf9ZWVn/WVlZ/1lZ
        Wf1ZWVlfWVlZAFNTUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAExMTABLS0sgTk5O1VdX
        V/9YWVn/Z2Vk/46Dff+8qJ3/48u+/+7azv/v4Nf/7+DX/+/g1//AxuD/Rk5g/yAfHv8tLS3/S0tL/1pa
        Wv9ZWVn/WVlZ0VhYWB1YWFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATExMAE1N
        TQBMTExUUVFR51hYWP9ZWVn/TExM/zMxMP9hWVX/t6us/+fW0P/v3tL/6NzZ/7DC8P9ndJX/ICAg/yQk
        JP9NTU3/Wlpa/1lZWelZWVlSWlpaAFhYWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATExMAEpKSgJMTEw+UVFRpFZWVtlWVlbxMC8v/iAiJv9ygbD/sb/p/8vH2P/Kydz/pbz0/4SX
        xP8mJyv/MTEw/ldXV/FZWVnAWVlZSVdXVwJYWFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEBAQAFNTUwBKSkoDSEhIIkRERJY9PT34MjIz/1lkhf+Yr+r/orrz/6S6
        8f+guO//anaT/zMzNf9DQ0P6UlJSmVNTUxlQUFAAampqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODg4ADY2Ng06OjqPRERE9UtLS/9LS0r/T1FZ/4CU
        zP+Qp+X/kqnm/46i1/9TVl3/S0tK/0xMTP9MTEz1TExMkktLSw5LS0sAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADg4OAAqKioAODg4ekJCQvxMTEz/TExM/0xM
        TP9aYHX/gJTQ/5Oq5/+ase3/kqjf/2Vsf/9MTEz/TExM/0xMTP9MTEz9TExMfD09PQBKSkoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODg4ADc3Nwc5OTl8Q0ND6EpK
        Sv9MS0v/WF9y/4CUzv+dte//orrz/6G58v+iuvP/ma/j/2Vtfv9LS0r/TExM/0xMTOpMTEx/SkpKCEpK
        SgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3NzcAODg4AEFB
        QQA4ODhdPz8++E5OUv9wgLL/mLDs/6K68/+hufL/obny/6G58v+iu/X/jZ/L/1FSVf9MS0v4S0tLYIKC
        fABLS0sASkpKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAOTk6ADc3NyI/QEXjVVtu/32Rzv+etvD/obny/6G58v+hufL/obny/6G58/+bsuf/YGZ3/05Q
        VONMTEwiTExNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABrfLIAboC4PW1+tu9zhcL/gpjY/6C48f+hufL/obny/6G58v+hufL/obny/5+3
        8P9+ksz/cIG473GDuzxvgLYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmO0gB5jtFzeY/T/3iM0P+Fm9v/oLjy/6G58v+hufL/obny/6G5
        8v+hufL/oLjx/4ab3P94jdL/eI7Rc3mO0gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa3yyAG5/uD1tfrbvdIfF/4if3v+iuvP/obny/6K6
        8/+iuvP/obrz/6G58v+iuvP/hZrU/3CBuO9xg7s9b4C2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5OjsAODg5Hz9AReBeaIf/hJfP/5yz
        6P+hufP/nLLo/5es3f+csuj/oLfv/5iu4f9xfZj/TlBU4ExNTh9NTU8AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADg4OAA3NzcfOzo64ExN
        Uf9TVVz/bneO/5216/9td47/VFZc/2lxhf91gZ3/V1pi/1FSVf9MTEvgTExMH0xMTAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODg4ADc3
        Nxs6OjrbSUlJ/0tLSv9UVlz/gZC0/1RWXP9KSkr/TE1N/01NTv9LS0v/TExM/0xMTNxLS0sbS0tLAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA4ODgANzc3Cjk5Ob1HR0f/TExM/01NTf9WWV//TU1N/0xMTP9MTEz/TExM/0xMTP9MTEz/TExMv0pK
        SgtKSkoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADg4OAA4ODgAODg4ckFBQf5MTEz/TExM/0xLS/9MTEz/TExM/0xMTP9MTEz/TExM/0xM
        TP9MTEx1Tk5OAElJSQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADg4OAA3NzcYOjo6wEdHR/9MTEz/TExM/0xMTP9MTEz/TExM/0xM
        TP9MTEz/TExMwUtLSxlLS0sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODg4ADc3NwA3NzctPT09wEdHR/1MTEz/TExM/0xM
        TP9MTEz/TExM/kxMTMJLS0svTExMAElJSQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANjY2ADg4OAA2NjYYPDw8ckRE
        RL1JSUnaTExM20xMTL9MTEx0S0tLGUxMTABISEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8f
        HwAAAAAAMzMzDD8/Px5JSUkfSkpKDUVFRQBISEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4AAH/+AAB/8AAAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AAAf+AAAP/gA
        AD/4AAA//AAAf/wAAH//AAH//wAA//8AAP/+AAB//4AB//+AAf//gAH//4AB//+AAf//gAH//4AB//+A
        Af//gAH//8AD///AA///4Af///AP///8P/8=
</value>
  </data>
</root>