<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABvl+YAbZXkAG6W5YduluX/dJ7s/3yl6//YukX//8QA///DAP//wwD//8MA///D
        AP//wwD//8MA///DAP//wwD//8MA///DAP//xAD/1bZC/3GX4P9xmun/eaTw/3mk8IZ5pPAAeaTwAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAG6W5QBuluUAbpblnG6W5f91n+3/fKXr/9i6Rf//xAD//8MA///D
        AP//wwD//8MA///DAP//wwD//8MA///DAP//wwD//8MA///EAP/VtkL/cZfg/3Ga6f95pPD/eaTwnHmk
        8AB5pPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbpblAG6W5QBuluWcbpbl/3Wf7f98pev/2LpF///E
        AP//wwD//8MA///DAP//wwD//8MA///DAP//wwD//8MA///DAP//wwD//8QA/9W2Qv9xl+D/cZrp/3mk
        8P95pPCceaTwAHmk8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuluUAbpblAG6W5ZxuluX/dZ/t/3yl
        6//Yukb//8QA///DAP//wwD//8MA///DAP//wwD//8MA///DAP//wwD//8MA///DAP//xAD/1bZC/3GX
        4P9xmun/eaTw/3mk8Jx5pPAAeaTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG2W5wBtlucAbZbnnG2W
        5/90n+//faXp/9u7QP//wwD//8MA///DAP//wwD//8MA///DAP//wwD//8MA///DAP//wwD//8MA///E
        AP/Ytz3/cpff/3Ca6/94o/L/eKTynHek9AB4pPEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuaNkALWb
        ZAC4oWScuKFk/8KvZf/OuFj/98EP///DAP//wwD//8MA///DAP//wwD//8MA///DAP//wwD//8QA///E
        AP//xAD//8MA//bAD//Islf/wLFl/8W1Zv/HtmWcxbZqAMi2ZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD0rQAA7KEAAPKqAJzyqgD/+7sA///EAP//wwD//8MA///DAP//wwD//8MA///DAP//wwD//8MA///E
        AP/2ryH/4YNq//GlNv//wwH//8MA///EAP//xAD//8QA///EAJz/xAAA/8QAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPKtAADqoQAA8KoAnPCqAP/6uwD//8MA///DAP//wwD//8MA///DAP//wwD//8MA///D
        AP//xAD/9q8h/9Fhof/HTc3/1WnA//KmQv//xAD//8MA///DAP//wwD//8MAnP/DAAD/wwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8q0AAOqhAADwqgCc8KoA//q7AP//wwD//8MA///DAP//wwD//8MA///D
        AP//wwD//8MA///EAP/fgG7/xUjK/81Z0v/SZNv/3nyi//2+Cv//wwD//8MA///DAP//wwCc/8MAAP/D
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADyrQAA6qEAAPCqAJzwqgD/+rsA///DAP//wwD//8MA///D
        AP//wwD//8MA///DAP//wwD//8MA/99+cf/HS8X/1myu/9Vpz//efKL//L4M///DAP//wwD//8MA///D
        AJz/wwAA/8MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPKuAADqngAA8KoAm/CqAP/6uwD//8MA///D
        AP//wwD//8MA///DAP//wwD//8MA///DAP//xAD/+bYV/+2ePf/4tRr/86k7//ezJf//wwD//8MA///D
        AP//wwD//8MAnP/DAAD/wwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9LEAAO6nAADwqgCL8KoA//q6
        AP//wwD//8MA///DAP//wwD//8MA///DAP//wwD//8MA///DAP//xAD//8UA///EAP//xQD//8QA///D
        AP//wwD//8MA///DAP//wwCK/8MAAP/DAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD9vwAA8KoAAPCr
        AEjwqgDy+bgA///DAP//wwD//8MA///DAP//wwD//8MA///DAP//wwD//8MA///DAP//wwD//8MA///D
        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
        A///wAP//8AD///AA///wAP//+AH///wD/8=
</value>
  </data>
</root>